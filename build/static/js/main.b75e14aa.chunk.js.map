{"version":3,"sources":["components/Input.tsx","components/Textbox.tsx","components/Dropdown.tsx","components/Player.tsx","components/Team.tsx","components/ScoreCard.tsx","components/Cricle.tsx","components/BatingDetail.tsx","components/BowlingDetail.tsx","constants/PlayerTypes.tsx","constants/BowlResult.tsx","actions/index.tsx","containers/TeamCreater.tsx","containers/Match.tsx","containers/BatingScoreCard.tsx","containers/BowlingDetails.tsx","Route.tsx","App.tsx","serviceWorker.ts","reducers/reducers.tsx","reducers/TeamReducres.tsx","services/Service.tsx","sagas/CreterSaga.tsx","index.tsx"],"names":["Input","withStyles","theme","createStyles","root","marginTop","spacing","input","borderRadius","position","marginRight","width","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","Textbox","id","name","onChange","value","placeholder","required","error","classes","FormControl","className","InputLabel","htmlFor","Dropdwon","labelId","options","Select","map","item","idx","MenuItem","key","Player","React","onNameChange","onPlayerTypeChange","isNameReqired","isNameError","type","style","display","justifyContent","alignItems","Team","onTeamNameChangeHandler","onNameChangeHandler","onPlayerTypeChangeHandler","team","playerTypes","e","playres","minWidth","bullet","transform","title","pos","marginBottom","vl","borderLeft","ScoreCard","strikeBatman","nonStrikeBatman","extraRun","remaningBowl","totalOver","teamName","run","over","wicket","bowlerName","overBowlResults","netRunRate","isAvgRunRateDisplay","Card","CardContent","Typography","variant","color","component","totalRun","Chip","label","large","height","Cricle","memo","result","Avatar","table","header","headerCell","fontWeight","BatingDetail","overs","noBowls","wideBowls","wicketFall","TableContainer","Paper","length","toFixed","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","p","status","boundryFour","boundrySix","bowlPlayed","strikeRate","BowlingDetail","wickets","economy","PlayerTypes","BowlResults","UpdateTeams","payload","PostSaveTeam","TeamCreater","history","useHistory","useState","team_a","Math","floor","random","isInningCompleted","team_b","teams","setTeams","dispatch","useDispatch","useEffect","localStorage","clear","i","_type","playersDefaultProps","batingOrder","hasStrike","team_a_player","teamId","team_b_player","push","_team","target","_teams","onSubmit","preventDefault","noValidate","autoComplete","borderRight","marginLeft","Button","Match","teamDetails","useSelector","state","batingTeam","setBatingTeam","bowlingTeam","setBowlingTeam","bowlResult","setBowlResult","wicketsDown","setWicketDown","setOver","bowlCounter","setBowlCounter","isMatchCompleted","setmatchCompleted","Object","keys","compare","a","b","lengthA","lengthB","comparison","getOverNumber","selectBatsMan","players","JSON","parse","stringify","find","isBatsManRun","rotateStrike","onStrickPlayer","onNonStrickPlayer","assign","startOver","_batingTeam","_bowlingTeam","counter","_wicketDown","bowler","filter","player","sort","bowlerOver","overNumber","currentBowler","_over","timer","setInterval","findIndex","aggangeBowlerOver","console","log","nextOrder","arrangeBatingTeam","isSaveRecord","stopOver","calculateResult","undefined","clearInterval","nextOver","nextInningStart","runA","runB","declareResult","onClick","matchOvers","avgRR","isNaN","isFinite","avgRunRate","CircularProgress","card","split","zIndex","top","paddingTop","left","right","BatingScoreCard","setTeamA","setTeamB","setResult","setStrikeRate","forEach","bowl","str","teamA","teamB","BowlingDetails","o","Divider","AppRoute","path","render","exact","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","url","getTeamDetails","getItem","fetch","then","res","json","catch","ex","setTeamDetails","method","body","saveTeamDetails","getTeamData","getTeams","saveTeamsData","saveTeams","updateTeamsData","updateTeams","rootSaga","call","put","takeEvery","setItem","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b75e14aa.chunk.js","sourcesContent":["import { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport {InputBase,TextField} from '@material-ui/core';\n\nexport const Input = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3),\n      },\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      marginRight:5,\n      width:'200px',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n  }),\n)(InputBase);\n","import * as React from \"react\";\nimport {Input} from './Input'\nimport { FormControl, InputLabel, createStyles, makeStyles, Theme } from \"@material-ui/core\";\n\n\nexport interface ITextBoxProps {\n    id?: string;\n    name?: string;\n    value?: string;\n    onChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;\n    placeholder?: string;\n    required?:boolean;\n    error?:boolean;\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    },\n  }),\n);\n\nexport const Textbox:React.FC<ITextBoxProps> = ({ id, name, onChange, value,placeholder,required=false,error=false }) => {\n    const classes = useStyles();\n    return (\n        <FormControl className={classes.margin}>\n            <InputLabel required={required}\n                error={error} htmlFor={'customized-textbox'+id}>{placeholder}</InputLabel>\n            <Input\n                name={name}\n                onChange={onChange}\n                value={value}\n                placeholder={placeholder}\n                id={id}\n                required={required}\n                error={error}\n            />\n        </FormControl>\n    )\n}\n","import * as React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FormControl, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { Input } from \"./Input\";\nimport { useStyles } from './Textbox'\n\ninterface IDropdown {\n  onChange?: ((event: React.ChangeEvent<{ value: unknown }>) => void) | undefined;\n  value?: string | number;\n  id?: string;\n  labelId?: string;\n  options?: Array<string | number>\n  required?: boolean;\n  error?: boolean;\n}\n\nexport const Dropdwon = ({ onChange, value, id, labelId, options = [], required = false, error = false }: IDropdown) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.margin}>\n      <InputLabel required={required}\n        error={error} htmlFor={'select' + id}>Type</InputLabel>\n      <Select\n        labelId={labelId}\n        id={id}\n        value={value}\n        onChange={onChange}\n        input={<Input />}\n        required={required}\n        error={error}\n      >\n        {options.map((item: string | number, idx: number) => <MenuItem key={idx} value={item}>{item}</MenuItem>)}\n\n      </Select>\n    </FormControl>\n  )\n}\n\n","import * as React from 'react';\nimport { Dropdwon } from './Dropdown';\nimport { Textbox } from './Textbox';\n\ninterface IPlayerProps {\n    onNameChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n    onPlayerTypeChange?: (event: React.ChangeEvent<{ value: unknown }>) => void;\n    name?: string;\n    isNameReqired?: boolean;\n    isNameError?: boolean;\n    type?: string | number;\n    options?: Array<string | number>;\n    placeholder?: string;\n\n}\n\nexport const Player: React.FC<IPlayerProps> =\n    React.memo<IPlayerProps>(({ onNameChange, onPlayerTypeChange, name, isNameReqired = false, isNameError = false, type, options, placeholder = 'Name' }) => (\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Textbox value={name}\n                onChange={onNameChange}\n                placeholder={placeholder}\n                required={isNameReqired}\n                error={isNameError}\n            />\n            <Dropdwon onChange={onPlayerTypeChange}\n                value={type}\n                options={options} />\n        </div>\n    ));","import * as React from 'react';\nimport { Textbox } from './Textbox';\nimport { Player } from './Player';\nimport { ITeam, IPlayer } from '../interfaces';\n\ninterface ITeamProps {\n    onTeamNameChangeHandler: (e: React.ChangeEvent<HTMLInputElement>, team: ITeam) => void;\n    onNameChangeHandler: (e: React.ChangeEvent<HTMLInputElement>, idx: number, team: ITeam) => void;\n    onPlayerTypeChangeHandler: (e: React.ChangeEvent<{ value: unknown }>, idx: number, team: ITeam) => void;\n    team: ITeam;\n    playerTypes: Array<string | number>;\n}\n\nexport const Team:React.FC<ITeamProps> = ({ onTeamNameChangeHandler, onNameChangeHandler, onPlayerTypeChangeHandler, team, playerTypes }) => {\n    return (\n        <div>\n            <Textbox onChange={(e) => onTeamNameChangeHandler(e, team)} value={team.name} placeholder=\"Team Name\" />\n            {team.playres.map((item: IPlayer, idx: number) => {\n                return (<div key={idx} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    {idx + 1} <Player options={playerTypes}\n                        onNameChange={(e: React.ChangeEvent<HTMLInputElement>) => { onNameChangeHandler(e, idx, team) }}\n                        name={item.name}\n                        onPlayerTypeChange={(e:React.ChangeEvent<{value: unknown;}>) => { onPlayerTypeChangeHandler(e, idx, team) }}\n                        type={item.type} />\n                </div>)\n            })}\n        </div>\n    )\n}\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { BowlResultType } from '../constants';\nimport Chip from '@material-ui/core/Chip';\nimport { IPlayer } from '../interfaces';\nimport SportsHandballSharpIcon from '@material-ui/icons/SportsHandballSharp';\nimport SportsCricketSharpIcon from '@material-ui/icons/SportsCricketSharp';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    vl: {\n        borderLeft: '3px solid #c1c1c1',\n        padding: 2\n    }\n});\n\ninterface IScoreCardProps {\n    teamName: string;\n    run?: number;\n    wicket?: number;\n    over?: number | string;\n    bowlerName?: IPlayer;\n    overBowlResults?: Array<BowlResultType>;\n    netRunRate?: number | string;\n    isAvgRunRateDisplay: boolean;\n    strikeBatman?: IPlayer;\n    nonStrikeBatman?: IPlayer;\n    extraRun?: number;\n    totalOver: number;\n    remaningBowl?: number;\n}\n\nexport const ScoreCard: React.FC<IScoreCardProps> = React.memo<IScoreCardProps>((\n    { strikeBatman, nonStrikeBatman, extraRun = 0, remaningBowl = 0, totalOver, teamName, run = 0, over = 0, wicket = 0, bowlerName, overBowlResults = [], netRunRate = 0, isAvgRunRateDisplay }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h2\" color=\"textSecondary\" component=\"h2\">\n                    {teamName} <SportsCricketSharpIcon />\n                </Typography>\n\n                <Typography variant=\"h4\" component=\"h2\">\n                    Score : {`${run}/${wicket}`}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    Over: {over}/{totalOver} <span className={classes.vl}></span> Remaining Balls: {remaningBowl}\n                </Typography>\n                {strikeBatman ? <Typography variant=\"body2\" component=\"p\">\n                    <SportsCricketSharpIcon /> {strikeBatman.name}* : {strikeBatman.totalRun || 0}\n                </Typography> : ''}\n                {nonStrikeBatman ? <Typography variant=\"body2\" component=\"p\">\n                    <SportsCricketSharpIcon />{nonStrikeBatman.name} : {nonStrikeBatman.totalRun || 0}\n                </Typography> : ''}\n                {isAvgRunRateDisplay ? <Typography variant=\"body2\" component=\"p\">\n                    Net RR: {netRunRate}\n                </Typography> : ''}\n\n                <Typography variant=\"body2\" component=\"p\">\n                    <SportsHandballSharpIcon />: {bowlerName?.name}\n                    <br />\n                    {overBowlResults.map((item: BowlResultType, idx: number) => <Chip key={idx} label={item} variant=\"outlined\" />)}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n})","import React from 'react';\nimport { makeStyles, createStyles, Theme, useTheme, styled } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\ninterface IResultProps {\n    result?: number | string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'flex',\n            '& > *': {\n                margin: theme.spacing(1)\n            },\n        },\n        large: {\n            width: theme.spacing(40),\n            height: theme.spacing(40),\n            fontSize: '125px'\n        },\n    }),\n);\n\nexport const Cricle: React.FC<IResultProps> = React.memo<IResultProps>(({ result = 0}) => {\n    const classes = useStyles(result);\n\n    return (\n        <div className={classes.root}>\n            <Avatar className={classes.large}>{result}</Avatar>\n        </div>\n    );\n})\n\n","import * as React from 'react';\nimport { ITeam, IPlayer } from '../interfaces';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SportsCricketSharpIcon from '@material-ui/icons/SportsCricketSharp';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    header: {\n        backgroundColor: '#000'\n    },\n    headerCell: {\n        color: '#FFF',\n        fontWeight: 'bold'\n    }\n});\n\nexport const BatingDetail: React.FC<ITeam> = React.memo<ITeam>(({ playres, name, totalRun = 0, overs, noBowls = 0, wideBowls = 0, wicketFall }) => {\n    const classes = useStyles();\n    debugger;\n    return (\n        <TableContainer component={Paper}>\n            <p> {name} <strong>{totalRun}/{wicketFall}  ({overs.length} ov)</strong> R/R {(totalRun / overs.length).toFixed(2)} </p>\n            <p>Extra {noBowls + wideBowls}  NB:{noBowls} WD:{wideBowls}</p>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead className={classes.header}>\n                    <TableRow>\n                        <TableCell className={classes.headerCell}>Batsman<SportsCricketSharpIcon /> </TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Status</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">R</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">4s</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">6s</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">B</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">SR</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {playres.map((p: IPlayer,idx:number) => (\n                        <TableRow key={`row-${idx}`}>\n                            <TableCell>  {p.name} </TableCell>\n                            <TableCell align=\"right\">{p.status || 'Bating not found'}</TableCell>\n                            <TableCell align=\"right\">{p.totalRun || 0}</TableCell>\n                            <TableCell align=\"right\">{p.boundryFour || 0}</TableCell>\n                            <TableCell align=\"right\">{p.boundrySix || 0}</TableCell>\n                            <TableCell align=\"right\">{p.bowlPlayed || 0}</TableCell>\n                            <TableCell align=\"right\">{p.strikeRate}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer >\n    );\n})","import * as React from 'react';\nimport { ITeam, IPlayer } from '../interfaces';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    header: {\n        backgroundColor: '#000'\n    },\n    headerCell: {\n        color: '#FFF',\n        fontWeight: 'bold'\n    }\n});\n\nexport const BowlingDetail: React.FC<ITeam> = React.memo<ITeam>(({ playres, name, totalRun = 0, overs, noBowls = 0, wideBowls = 0, wicketFall }) => {\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <h3> {name} </h3>\n            <p>Extra {noBowls + wideBowls}  NB:{noBowls} WD:{wideBowls}</p>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead className={classes.header}>\n                    <TableRow>\n                        <TableCell className={classes.headerCell}>Bowling<SportsHandballIcon /> </TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">O</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">R</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Wt</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">NB</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">WB</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Economy</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {playres.map((p: IPlayer, idx: number) => {\n                        debugger;\n                        return (\n                        <TableRow key={`row-${idx}`}>\n                            <TableCell>  {p.name} </TableCell>\n                            <TableCell align=\"right\">{p.overs.length}.0</TableCell>\n                            <TableCell align=\"right\">{p.totalRun}</TableCell>\n                            <TableCell align=\"right\">{p.wickets}</TableCell>\n                            <TableCell align=\"right\">{p.noBowls || 0}</TableCell>\n                            <TableCell align=\"right\">{p.wideBowls || 0}</TableCell>\n                            <TableCell align=\"right\">{p.economy}</TableCell>\n                        </TableRow>\n                    )})}\n                </TableBody>\n            </Table>\n        </TableContainer >\n    );\n})\n","export const PlayerTypes: string[] = ['batsman', 'bowler']\n","export type BowlResultType = 0|1|2|4|5|6|'NB'|'Wt'|'WB';\n\nexport const BowlResults = [0,1,2,4,5,6,'NB','Wt','WB'];\n","import { ITeams } from \"../interfaces\"\n\nexport function GetTeams(){\n    return {\n        type: \"GET_TEAMS\"\n    }\n}\n\nexport function SaveTeams(payload: ITeams): { type: string, payload: ITeams } {\n    return {\n        type: \"SAVE_TEAMS_INIT\",\n        payload\n    }\n}\n\nexport function UpdateTeams(payload: ITeams): { type: string, payload: ITeams } {\n    return {\n        type: \"UPDATE_TEAMS_INIT\",\n        payload\n    }\n}\n\n\nexport const PostSaveTeam = (payload: any): { type: string, payload: any } => {\n    return {\n        type: \"SAVE_TEAM_SUCCESS\",\n        payload\n    }\n}\n\n\n","import React, { useState, FunctionComponent as FC, useEffect } from 'react';\nimport { Team } from '../components';\nimport { PlayerTypes } from '../constants'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport { ITeam, ITeams, IPlayer, playerType } from '../interfaces';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { SaveTeams } from '../actions';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1)\n            },\n        },\n    }),\n);\n\nexport const TeamCreater: FC = () => {\n    const classes = useStyles();\n    let history = useHistory();\n    const [teams, setTeams] = useState<ITeams>({\n        team_a: {\n            name: 'Team A',\n            playres: [],\n            id: Math.floor(Math.random() * 100),\n            totalRun: 0,\n            overs: [],\n            isInningCompleted:false\n        },\n        team_b: {\n            name: 'Team B',\n            playres: [],\n            id: Math.floor(Math.random() * 100),\n            totalRun: 0,\n            overs: [],\n            isInningCompleted:false\n        }\n    })\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        localStorage.clear();\n        const { team_a, team_b } = { ...teams };\n        for (let i = 0; i < 11; i++) {\n            let _type: playerType = 'batsman';\n            if (i > 5) {\n                _type = 'bowler'\n            }\n            const playersDefaultProps = {\n                type: _type, \n                batingOrder: i, \n                overs: [],\n                hasStrike:false\n            }\n            const team_a_player: IPlayer = { name: 'A' + (i + 1), teamId: 'TeamA', ...playersDefaultProps }\n            const team_b_player: IPlayer = { name: 'B' + (i + 1), teamId: 'TeamB', ...playersDefaultProps }\n            team_a.playres.push({ ...team_a_player })\n            team_b.playres.push({ ...team_b_player });\n        }\n        setTeams({ team_a, team_b })\n    }, [])\n\n    const onTeamNameChangeHandler = (e: React.ChangeEvent<HTMLInputElement>, _team: ITeam) => {\n        const { team_a, team_b } = { ...teams };\n        if (team_a.id === _team.id) {\n            team_a.name = e.target.value;\n        } else {\n            team_b.name = e.target.value;\n        }\n        setTeams({ team_a, team_b })\n    }\n\n    const onNameChangeHandler = (e: React.ChangeEvent<HTMLInputElement>, idx: number, _team: ITeam) => {\n        const { team_a, team_b } = { ...teams };\n        let playres = [], _teams;\n        if (team_a.id === _team.id) {\n            playres = team_a.playres;\n            playres[idx].name = e.target.value;\n            _teams = { team_b, team_a: { ..._team, playres } };\n        } else {\n            playres = team_b.playres;\n            playres[idx].name = e.target.value;\n            _teams = { team_a, team_b: { ..._team, playres } };\n        }\n        setTeams({ ..._teams })\n    }\n\n    const onPlayerTypeChangeHandler = (e: React.ChangeEvent<{ value: unknown }>, idx: number, _team: ITeam) => {\n        const { team_a, team_b } = { ...teams };\n        let playres: IPlayer[] = [], _teams;\n        if (team_a.id === _team.id) {\n            playres = team_a.playres;\n            playres[idx].type = e.target.value as playerType;\n            _teams = { team_b, team_a: { ..._team, playres } };\n        } else {\n            playres = team_b.playres;\n            playres[idx].type = e.target.value as playerType;\n            _teams = { team_a, team_b: { ..._team, playres } };\n        }\n        setTeams({ ..._teams })\n    }\n\n    const onSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n        e?.preventDefault();\n        dispatch(SaveTeams(teams));\n        history.push('/matchstart')\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={classes.root} noValidate autoComplete=\"off\">\n            <h1>Create Team</h1>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                    <Team onTeamNameChangeHandler={onTeamNameChangeHandler}\n                        onNameChangeHandler={onNameChangeHandler}\n                        onPlayerTypeChangeHandler={onPlayerTypeChangeHandler}\n                        team={teams.team_a}\n                        playerTypes={PlayerTypes} />\n                </div>\n                <div style={{ borderRight: '1px solid #eee' }}></div>\n                <div style={{ marginLeft: '50px' }}>\n                    <Team onTeamNameChangeHandler={onTeamNameChangeHandler}\n                        onNameChangeHandler={onNameChangeHandler}\n                        onPlayerTypeChangeHandler={onPlayerTypeChangeHandler}\n                        team={teams.team_b}\n                        playerTypes={PlayerTypes} />\n                </div>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                Submit\n            </Button>\n        </form>)\n}","import React, { useState, FunctionComponent as FC, useEffect } from 'react';\nimport { BowlResults, BowlResultType } from '../constants';\nimport { Button, Card, CardContent, Typography, CircularProgress } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ITeam, ITeams, IPlayer, IOver, IBowlerOver } from '../interfaces';\nimport { ScoreCard, Cricle } from '../components';\nimport { UpdateTeams, GetTeams } from '../actions';\nimport { useHistory, Link } from \"react-router-dom\";\nimport classes from '*.module.css';\n\nexport const Match: FC = () => {\n    const teamDetails = useSelector((state: any) => state.teams);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const matchOvers: number = 10;\n\n    const [batingTeam, setBatingTeam] = useState<ITeam>();\n    const [bowlingTeam, setBowlingTeam] = useState<ITeam>();\n    const [bowlResult, setBowlResult] = useState<BowlResultType | ''>('');\n    const [wicketsDown, setWicketDown] = useState<number>(0);\n    const [over, setOver] = useState<BowlResultType[]>([]);\n    const [bowlCounter, setBowlCounter] = useState<number>(0);\n    const [isMatchCompleted, setmatchCompleted] = useState<boolean>(false)\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            if (teamDetails.team_a.isInningCompleted) {\n                setBatingTeam(teamDetails.team_b)\n                setBowlingTeam(teamDetails.team_a)\n            } else {\n                setBatingTeam(teamDetails.team_a)\n                setBowlingTeam(teamDetails.team_b)\n            }\n            if (teamDetails.team_a.isInningCompleted && teamDetails.team_b.isInningCompleted) {\n                setmatchCompleted(true);\n            }\n        }\n    }, [teamDetails]);\n\n\n    const hitBowl = (): BowlResultType => {\n        return BowlResults[Math.floor(Math.random() * BowlResults.length)] as BowlResultType;\n    }\n\n    const compare = (a: IPlayer, b: IPlayer) => {\n        const lengthA = a.overs?.length || 0;\n        const lengthB = b.overs?.length || 0;\n        let comparison = 0;\n        if (lengthA > lengthB) {\n            comparison = 1;\n        } else if (lengthA < lengthB) {\n            comparison = -1;\n        }\n        return comparison;\n    }\n\n    const getBowler = (players: IPlayer[]): IPlayer => {\n        return players.filter((player: IPlayer) => player.type === 'bowler').sort(compare).find((player: IPlayer) => player.type === 'bowler') as IPlayer\n    }\n\n    const getOverNumber = (): number => (!batingTeam?.overs?.length ? 1 : (batingTeam?.overs?.length + 1));\n\n    const aggangeBowlerOver = (bowlerOver: IBowlerOver, result: BowlResultType, _over: BowlResultType[]): IBowlerOver => {\n        const run = (result === 'WB' || result === 'NB') ? 1 : result as number;\n        return Object.assign(bowlerOver, {\n            totalRun: result !== 'Wt' ? (bowlerOver.totalRun || 0) + run : (bowlerOver.totalRun || 0),\n            wicketFall: result === 'Wt' ? (bowlerOver.wicketFall || 0) + 1 : (bowlerOver.wicketFall || 0),\n            bowlResult: [..._over],\n            boundryFour: result === 4 ? (bowlerOver.boundryFour || 0) + 1 : (bowlerOver.boundryFour || 0),\n            boundrySix: result === 6 ? (bowlerOver.boundrySix || 0) + 1 : (bowlerOver.boundrySix || 0),\n            noBowls: result === 'NB' ? (bowlerOver.noBowls || 0) + 1 : (bowlerOver.noBowls || 0),\n            wideBowls: result === 'WB' ? (bowlerOver.wideBowls || 0) + 1 : (bowlerOver.wideBowls || 0)\n        })\n    }\n\n    const selectBatsMan = (players: IPlayer[], batingOrder: number): IPlayer => {\n        return JSON.parse(JSON.stringify(players.find((p: IPlayer) => p.batingOrder === batingOrder))) as IPlayer\n    }\n\n    const isBatsManRun = (result: BowlResultType): boolean => {\n        return (result === 'WB' || result === 'Wt' || result === 'NB') ? false : true\n    }\n\n\n    const arrangeBatingTeam = (_batingTeam: ITeam, result: BowlResultType): ITeam => {\n        const run = (result === 'WB' || result === 'NB') ? 1 : result as number;\n        const { playres } = JSON.parse(JSON.stringify(_batingTeam));\n        if (!_batingTeam.onStrickPlayer) {\n            _batingTeam.onStrickPlayer = selectBatsMan([...playres], 0);\n            _batingTeam.onNonStrickPlayer = selectBatsMan([...playres], 1);\n        }\n        const { onStrickPlayer, onNonStrickPlayer } = _batingTeam;\n        Object.assign(onStrickPlayer, {\n            bowlPlayed: result !== 'WB' ? (onStrickPlayer?.bowlPlayed || 0) + 1 : (onStrickPlayer?.bowlPlayed || 0),\n            totalRun: isBatsManRun(result) ? (onStrickPlayer?.totalRun || 0) + (result as number) : (onStrickPlayer?.totalRun || 0),\n            boundryFour: result === 4 ? (onStrickPlayer?.boundryFour || 0) + 1 : (onStrickPlayer?.boundryFour || 0),\n            boundrySix: result === 6 ? (onStrickPlayer?.boundrySix || 0) + 1 : (onStrickPlayer?.boundrySix || 0),\n            status: result === 'Wt' ? 'Out' : 'Not Out',\n            hasStrike: result === 'Wt' ? false : true\n        })\n        const idx = playres.findIndex((p: IPlayer) => p.batingOrder === onStrickPlayer.batingOrder)\n        if (idx > -1) {\n            playres[idx] = JSON.parse(JSON.stringify(onStrickPlayer));\n        }\n        if (isBatsManRun(result) && (result as number) / 2 !== 0) {\n            rotateStrike(_batingTeam);\n            console.log(_batingTeam);\n        }\n        if (result === 'Wt') {\n            const nextOrder = (onStrickPlayer?.batingOrder || 0) > (onNonStrickPlayer?.batingOrder || 0) ? (onStrickPlayer?.batingOrder || 0) : (onNonStrickPlayer?.batingOrder || 0);\n            _batingTeam.onStrickPlayer = selectBatsMan([...playres], nextOrder + 1);\n        }\n        Object.assign(_batingTeam, {\n            totalRun: result !== 'Wt' ? (_batingTeam.totalRun || 0) + run : (_batingTeam.totalRun || 0),\n            wicketFall: result === 'Wt' ? (_batingTeam.wicketFall || 0) + 1 : (_batingTeam.wicketFall || 0),\n            boundryFour: result === 4 ? (_batingTeam.boundryFour || 0) + 1 : (_batingTeam.boundryFour || 0),\n            boundrySix: result === 6 ? (_batingTeam.boundrySix || 0) + 1 : (_batingTeam.boundrySix || 0),\n            noBowls: result === 'NB' ? (_batingTeam.noBowls || 0) + 1 : (_batingTeam.noBowls || 0),\n            wideBowls: result === 'WB' ? (_batingTeam.wideBowls || 0) + 1 : (_batingTeam.wideBowls || 0),\n            extraRun: (result === 'NB' || result === 'WB') ? (_batingTeam.extraRun || 0) + 1 : (_batingTeam.extraRun || 0),\n            playres: JSON.parse(JSON.stringify(playres)),\n            onStrickPlayer: { ..._batingTeam.onStrickPlayer },\n            onNonStrickPlayer: { ..._batingTeam.onNonStrickPlayer }\n        });\n        return _batingTeam\n    }\n\n    const rotateStrike = (team: ITeam): ITeam => {\n        const onStrickPlayer = JSON.parse(JSON.stringify(team.onStrickPlayer));\n        const onNonStrickPlayer = JSON.parse(JSON.stringify(team.onNonStrickPlayer));\n        return Object.assign(team, { onNonStrickPlayer: onStrickPlayer, onStrickPlayer: onNonStrickPlayer });\n    }\n\n    const startOver = (_batingTeam: ITeam, _bowlingTeam: ITeam): void => {\n        let counter: number = 0;\n        let _wicketDown: number = wicketsDown;\n        const bowler = getBowler(_bowlingTeam.playres);\n        let bowlerOver: IBowlerOver = {\n            overNumber: getOverNumber(), totalRun: 0,\n            boundryFour: 0, boundrySix: 0, wicketFall: 0, bowlResult: [], noBowls: 0, wideBowls: 0,\n        }\n        _bowlingTeam.currentBowler = bowler;\n       \n        const _over = over;\n        const timer = setInterval(() => {\n            const result: BowlResultType = hitBowl();\n            setBowlResult(result);\n            const _bowlResults: BowlResultType[] = [0, 1, 2, 4, 5, 6, 'Wt'];\n            _over.push(result);\n            if (result === 'Wt') {\n                _wicketDown++\n                setWicketDown(_wicketDown);\n                const idx = _bowlingTeam.playres.findIndex((p: IPlayer) => p.name === bowler.name)\n                const wickets = _bowlingTeam.playres[idx].wickets || 0\n                if (wickets === 0) {\n                    _bowlingTeam.playres[idx].wickets = 0;\n                }\n                if (_bowlingTeam.playres[idx].wickets)\n                    _bowlingTeam.playres[idx] = { ..._bowlingTeam.playres[idx], wickets: (wickets + 1) }\n            }\n            bowlerOver = aggangeBowlerOver({ ...bowlerOver }, result, _over);\n            _batingTeam = arrangeBatingTeam({ ..._batingTeam }, result)\n            let isSaveRecord = false;\n            if (_bowlResults.findIndex((item: BowlResultType, idx: number) => item === result) > -1) {\n                counter++;\n                if (counter === 6) {\n                    _batingTeam = rotateStrike(_batingTeam);\n                    counter = stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n                    isSaveRecord = true;\n                }\n            }\n\n            if (_batingTeam.wicketFall === 10) {\n                counter = stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n                _batingTeam.isInningCompleted = true;\n                isSaveRecord = true;\n            }\n\n            if (_bowlingTeam.isInningCompleted && calculateResult(_batingTeam as ITeam,_bowlingTeam as ITeam).name === _batingTeam.name) {\n                debugger;\n                _batingTeam.isInningCompleted = true;\n                _bowlingTeam.isInningCompleted=true;\n                isSaveRecord = true;\n                stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n            }\n            setBatingTeam({ ..._batingTeam });\n            setBowlingTeam({ ..._bowlingTeam });\n            setOver(_over);\n            setBowlCounter(counter);\n            if (isSaveRecord) {\n                if (!_bowlingTeam.isInningCompleted) {\n                    dispatch(UpdateTeams({ team_a: _batingTeam, team_b: _bowlingTeam }))\n                }\n                else {\n                    dispatch(UpdateTeams({ team_a: _bowlingTeam, team_b: _batingTeam }))\n                }\n            }\n        }, 1000);\n    }\n\n    const stopOver = (_batingTeam: ITeam, _bowlingTeam: ITeam, bowlerOver: IBowlerOver, timer: NodeJS.Timeout) => {\n        if (_batingTeam!.overs == undefined) {\n            _batingTeam!.overs = [];\n        }\n        _batingTeam!.overs.push({ bowlerName: _bowlingTeam.currentBowler?.name || '', ...bowlerOver })\n        console.log(_batingTeam!.overs)\n        _batingTeam.isInningCompleted = (_batingTeam!.overs?.length === matchOvers)\n        // _batingTeam.playres = JSON.parse(JSON.stringify([..._batingTeam.playres]));\n        const idx: number = _bowlingTeam.playres.findIndex((p: IPlayer) => p.name === _bowlingTeam.currentBowler?.name);\n        if (idx > -1 && _bowlingTeam.playres[idx].overs === undefined) {\n            _bowlingTeam.playres[idx] = { ..._bowlingTeam.playres[idx], overs: [bowlerOver] }\n        }\n        else {\n            _bowlingTeam.playres[idx]?.overs.push(bowlerOver);\n        }\n\n        clearInterval(timer);\n        return 0;\n    }\n\n    const nextOver = (): void => {\n        over.length = 0;\n        startOver({ ...batingTeam } as ITeam, { ...bowlingTeam } as ITeam);\n    }\n\n    const avgRunRate = (): number | string => {\n        const avgRR = ((batingTeam?.totalRun || 0) / (batingTeam?.overs?.length || 0))\n        return (isNaN(avgRR) && !isFinite(avgRR)) ? 0 : avgRR.toFixed(2);\n    }\n\n    const matchStart = (): void => {\n        startOver(JSON.parse(JSON.stringify(teamDetails.team_a)), JSON.parse(JSON.stringify(teamDetails.team_b)));\n    }\n\n    const nextInningStart = (): void => {\n        over.length = 0;\n        teamDetails.team_a = JSON.parse(JSON.stringify(batingTeam));\n        teamDetails.team_b = JSON.parse(JSON.stringify(bowlingTeam));\n        setBatingTeam(JSON.parse(JSON.stringify(teamDetails.team_b)));\n        setBowlingTeam(JSON.parse(JSON.stringify(teamDetails.team_a)));\n        startOver(JSON.parse(JSON.stringify(teamDetails.team_b)), JSON.parse(JSON.stringify(teamDetails.team_a)));\n    }\n\n    const nextOverButton = (): JSX.Element => (<Button variant=\"contained\" color=\"primary\" onClick={nextOver}>Next Over</Button>)\n    const nextInningButton = (): JSX.Element => (<Button variant=\"contained\" color=\"primary\" onClick={nextInningStart}>Next Inning</Button>)\n\n    const remaningBowl = (): number => {\n        return (matchOvers * 6) - (((batingTeam?.overs?.length || 0) * 6) + bowlCounter)\n    }\n\n    const calculateResult = (_batingTeam:ITeam,_bowlingTeam:ITeam): ITeam => {\n        return (_batingTeam!.totalRun || 0) > (_bowlingTeam!.totalRun || 0) ? _batingTeam! : _bowlingTeam!;\n    }\n    const declareResult = (): string => {\n        const runA = (batingTeam!.totalRun || 0);\n        const runB = (bowlingTeam!.totalRun || 0);\n        if(runA > runB){\n            return `${batingTeam!.name} beat  ${bowlingTeam!.name} by ${10 - (batingTeam!.wicketFall || 0)} wickets`; \n        }\n        if(runA < runB){\n          return  `${bowlingTeam!.name} beat ${batingTeam!.name} by ${runB - runA} runs`;\n        }\n        return  'Match tie'\n    }\n\n    if (!batingTeam) {\n        return (<CircularProgress />)\n    }\n\n    if (!isMatchCompleted) {\n        return (\n            <div>\n                <Cricle result={bowlResult} />\n                <ScoreCard teamName={batingTeam.name}\n                    run={batingTeam!.totalRun}\n                    totalOver={matchOvers}\n                    wicket={batingTeam!.wicketFall}\n                    over={(batingTeam!.overs?.length || 0) + '.' + bowlCounter}\n                    remaningBowl={remaningBowl()}\n                    bowlerName={bowlingTeam!.currentBowler}\n                    isAvgRunRateDisplay={bowlCounter === 0}\n                    netRunRate={avgRunRate()}\n                    overBowlResults={over}\n                    strikeBatman={batingTeam.onStrickPlayer}\n                    nonStrikeBatman={batingTeam.onNonStrickPlayer}\n                />\n                {(bowlCounter === 0 && !batingTeam.isInningCompleted) ? nextOverButton() : ''}\n                {batingTeam.isInningCompleted ? nextInningButton() : ''}\n\n            </div>\n\n        )\n    }\n\n    return (\n        <div>\n            <Card variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {declareResult()}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => { history.push('/scorecard') }}>\n                Batting Score Card\n            </Button>\n        </div>\n    )\n}","import * as React from 'react';\nimport { makeStyles, createStyles, Theme, Card, CardContent, Typography, CircularProgress, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IPlayer, ITeam } from '../interfaces';\nimport { GetTeams } from '../actions';\nimport { BatingDetail } from '../components';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n        card: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        split: {\n            height: '100%',\n            width: '50%',\n            position: 'fixed',\n            zIndex: 1,\n            top: 0,\n            paddingTop: 20,\n        },\n        left: {\n            left: 0,\n        },\n        right: {\n            right: 0,\n        }\n    }),\n);\n\n\nexport const BatingScoreCard: React.FC = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const teamDetails = useSelector((state: any) => state.teams);\n\n    const [team_a, setTeamA] = React.useState<ITeam>();\n    const [team_b, setTeamB] = React.useState<ITeam>();\n    const [result, setResult] = React.useState<string>();\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    const setStrikeRate = (playres: IPlayer[]): IPlayer[] => {\n        playres = playres.filter((p: IPlayer) => p.bowlPlayed)\n        debugger;\n        playres.forEach((p: IPlayer, idx) => {\n            playres[idx].strikeRate = strikeRate(p.totalRun, p.bowlPlayed)\n        })\n        return playres;\n    }\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            teamDetails.team_a.playres = setStrikeRate(teamDetails.team_a.playres)\n            teamDetails.team_b.playres = setStrikeRate(teamDetails.team_b.playres)\n            setResult(calculateResult(teamDetails.team_a, teamDetails.team_b));\n            setTeamA(teamDetails.team_a)\n            setTeamB(teamDetails.team_b)\n        }\n    }, [teamDetails]);\n\n\n    const strikeRate = (run: number = 0, bowl: number = 0): number | string => {\n        const str = ((run / bowl) * 100)\n        return (str > -1 ? str : 0).toFixed(2);\n    }\n\n    const calculateResult = (teamA: ITeam, teamB: ITeam): string => {\n        const runA = (teamA.totalRun || 0);\n        const runB = (teamB.totalRun || 0)\n        if (runA > runB) {\n            return `${teamA.name} beat ${teamB.name} by ${runA - runB} runs`;\n        }\n        if (runA < runB) {\n            return `${teamB.name} beat ${teamA.name} by ${10 - (teamB.wicketFall || 0)} wickets`;\n        }\n        return 'Match tie'\n    }\n    const nextScreen = () => {\n        history.push('/bowing')\n    }\n\n    if (!team_a) {\n        return <div className={classes.root}><CircularProgress /></div>\n    }\n\n    return (\n        <div>\n            <Card className={classes.card} variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {result}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <div className={`${classes.split},${classes.left}`}>\n                <BatingDetail {...team_a!} />\n            </div>\n            <div className={`${classes.split},${classes.right}`}>\n                <BatingDetail {...team_b!} />\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={nextScreen}>Bowling Details</Button>\n\n        </div>\n    )\n}\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme, Divider, Card, CardContent, Typography, CircularProgress, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IPlayer, ITeam, IBowlerOver } from '../interfaces';\nimport { GetTeams } from '../actions';\nimport { BowlingDetail } from '../components';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n        card: {\n            minWidth: 275,\n        },\n        title: {\n\n            fontSize: 14,\n        },\n    }),\n);\n\n\nexport const BowlingDetails: React.FC = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const teamDetails = useSelector((state: any) => state.teams);\n\n    const [team_a, setTeamA] = React.useState<ITeam>();\n    const [team_b, setTeamB] = React.useState<ITeam>();\n    const [result, setResult] = React.useState<string>();\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            teamDetails.team_a.playres = setStrikeRate(teamDetails.team_a.playres)\n            teamDetails.team_b.playres = setStrikeRate(teamDetails.team_b.playres)\n            let noBowls = teamDetails.team_a.noBowls, wideBowls = teamDetails.team_a.wideBowls;\n            teamDetails.team_a.noBowls = teamDetails.team_b.noBowls;\n            teamDetails.team_a.wideBowls = teamDetails.team_b.wideBowls;\n            teamDetails.team_b.noBowls = noBowls;\n            teamDetails.team_b.wideBowls=wideBowls;\n            setTeamA(teamDetails.team_a)\n            setTeamB(teamDetails.team_b)\n        }\n    }, [teamDetails]);\n\n    const setStrikeRate = (playres: IPlayer[]): IPlayer[] => {\n        playres = playres.filter((p: IPlayer) => p.overs)\n        playres.forEach((p: IPlayer, idx: number) => {\n            playres[idx].totalRun = 0;\n            let run:number=0,wicket:number=0, noBowls:number=0, wideBowls:number=0;\n            p.overs.forEach((o: IBowlerOver) => {\n                    run += (o.totalRun || 0);\n                    wicket +=(o.wicketFall||0);\n                    noBowls +=(o.noBowls||0)\n                    wideBowls +=(o.wideBowls||0)\n            });\n            debugger\n            playres[idx] = {...playres[idx],totalRun:run,wickets:wicket,economy:run/(p.overs.length),noBowls,wideBowls}\n        })\n        return playres;\n    }\n\n    const nextScreen = () => {\n        history.push('/')\n    }\n\n    if (!team_a) {\n        return <div className={classes.root}><CircularProgress /></div>\n    }\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={nextScreen}>New Match</Button>\n            <BowlingDetail {...team_a!} />\n            <Divider />\n            <BowlingDetail {...team_b!} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nimport { TeamCreater, Match,BatingScoreCard, BowlingDetails } from './containers';\n\nexport const AppRoute = () => {\n    return (<Router>\n        <Switch>\n            <Route path=\"/\" render={() => <TeamCreater />} exact={true} />\n            <Route path=\"/matchstart\" render={() => <Match/>} />\n            <Route path=\"/scorecard\" render={() => <BatingScoreCard/>} />\n            <Route path='/bowing' render={()=><BowlingDetails/>}/>\n        </Switch>\n    </Router>)\n}\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './Route';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRoute />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {TeamReducers } from './TeamReducres'\n\nexport const rootReducer =  combineReducers({\n    teams:TeamReducers,\n})\nexport type RootState = ReturnType<typeof rootReducer>;","export const TeamReducers = (state: any = {}, action: { type: string, payload: any }) => {\n    switch (action.type) {\n        case 'SAVE_TEAM_INIT':\n            return { ...state, ...action.payload };\n            break;\n        case 'UPDATE_TEAMS_INIT':\n            return { ...state, ...action.payload };\n            break;\n        case 'SAVE_TEAM_SUCCESS':\n            return { ...state, ...action.payload };\n            break;\n        default:\n            return state;\n            break;\n    }\n}","import { ITeams } from \"../interfaces\";\n\nconst url:string=`https://cric-score-ad64d.firebaseio.com/`;\n\nexport const getTeamDetails = () => {\n    const id = localStorage.getItem('id')\n    return fetch(`${url}teams/${id}/.json`)\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res)\n            return res;\n        })\n        .catch(ex => {\n            console.log(ex)\n        })\n}\n\nexport const setTeamDetails = (payload: ITeams) => {\n    const id = localStorage.getItem('id')\n    if (id) {\n        return fetch(`${url}teams/${id}/.json`, {\n            method: 'PATCH',\n            body: JSON.stringify(payload)\n        })\n            .then(res => res.json())\n            .then((res) => {\n                console.log(res)\n                return res;\n            })\n            .catch(ex => {\n                console.log(ex)\n            })\n    }\n}\n\nexport const saveTeamDetails = (payload: ITeams): Promise<{ name: string }> => {\n    return fetch(`${url}/teams.json`, {\n        method: 'POST',\n        body: JSON.stringify(payload)\n    })\n        .then(res => res.json())\n        .catch(ex => {\n            console.log(ex)\n        })\n}\n","import { put, take, takeEvery, all, delay, call } from 'redux-saga/effects';\nimport { saveTeamDetails,setTeamDetails,getTeamDetails } from '../services';\nimport { PostSaveTeam } from '../actions';\n\nfunction* getTeamData() {\n  const res = yield call(getTeamDetails)\n  if (res) {\n    yield put(PostSaveTeam({ ...res }))\n  }\n}\n\nfunction* getTeams(){\n  yield takeEvery('GET_TEAMS',getTeamData)\n} \n\n\nfunction* saveTeamsData(action: any) {\n  const { payload } = action;\n  const res = yield call(saveTeamDetails, payload)\n  if (res) {\n    localStorage.setItem('id',res.name);\n    yield put(PostSaveTeam({ ...action.payload, ...res }))\n  }\n}\n\n\nfunction* saveTeams() {\n  yield takeEvery(\"SAVE_TEAMS_INIT\", saveTeamsData)\n}\n\n\nfunction* updateTeamsData(action: any) {\n  const { payload } = action;\n  const res = yield call(setTeamDetails, payload)\n  if (res) {\n    yield put(PostSaveTeam({ ...action.payload, ...res }))\n  }\n}\n\nfunction* updateTeams(){\n  yield takeEvery('UPDATE_TEAMS_INIT',updateTeamsData)\n} \n\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\nexport function* rootSaga() {\n  yield all([\n    getTeams(),\n    saveTeams(),\n    updateTeams()\n  ])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore ,applyMiddleware} from 'redux';\nimport { rootReducer } from './reducers';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {rootSaga} from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...[sagaMiddleware])\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}