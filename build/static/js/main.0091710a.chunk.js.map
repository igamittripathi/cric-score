{"version":3,"sources":["components/Input.tsx","components/Textbox.tsx","components/Dropdown.tsx","components/Player.tsx","components/Team.tsx","components/ScoreCard.tsx","components/Cricle.tsx","components/BatingDetail.tsx","components/BowlingDetail.tsx","constants/PlayerTypes.tsx","constants/BowlResult.tsx","constants/InitialState.tsx","actions/index.tsx","containers/TeamCreater.tsx","containers/Match.tsx","containers/BatingScoreCard.tsx","containers/BowlingDetails.tsx","Route.tsx","App.tsx","serviceWorker.ts","reducers/reducers.tsx","reducers/TeamReducres.tsx","services/Service.tsx","sagas/CreterSaga.tsx","index.tsx"],"names":["Input","withStyles","theme","createStyles","root","marginTop","spacing","input","borderRadius","position","marginRight","width","backgroundColor","palette","background","paper","border","fontSize","padding","transition","transitions","create","fontFamily","join","borderColor","boxShadow","InputBase","useStyles","makeStyles","margin","Textbox","id","name","onChange","onBlur","onFocus","value","placeholder","required","error","classes","FormControl","className","InputLabel","variant","style","htmlFor","Dropdwon","labelId","options","Select","map","item","idx","MenuItem","key","Player","React","onNameChange","onPlayerTypeChange","onNameFocus","onNameBlur","isNameReqired","isNameError","type","display","justifyContent","alignItems","Team","onTeamNameChangeHandler","onNameChangeHandler","onPlayerTypeChangeHandler","team","playerTypes","e","length","playres","p","isError","isRequired","minWidth","bullet","transform","title","pos","marginBottom","vl","borderLeft","ScoreCard","strikeBatman","nonStrikeBatman","extraRun","remaningBowl","totalOver","teamName","run","over","wicket","bowlerName","overBowlResults","netRunRate","isAvgRunRateDisplay","Card","CardContent","Typography","color","component","totalRun","Chip","label","large","height","Cricle","memo","result","Avatar","table","header","headerCell","fontWeight","BatingDetail","overs","noBowls","wideBowls","wicketFall","TableContainer","Paper","toFixed","Table","size","aria-label","TableHead","TableRow","TableCell","align","TableBody","status","boundryFour","boundrySix","bowlPlayed","strikeRate","BowlingDetail","wickets","economy","PlayerTypes","BowlResults","initialState","team_a","Math","floor","random","isInningCompleted","team_b","UpdateTeams","payload","SucessResponse","TeamCreater","history","useHistory","useState","teams","setTeams","teamDetails","useSelector","state","dispatch","useDispatch","useEffect","localStorage","clear","i","_type","playersDefaultProps","batingOrder","hasStrike","team_a_player","teamId","team_b_player","push","_team","target","validate","isValid","onSubmit","preventDefault","noValidate","autoComplete","borderRight","marginLeft","Button","CircularProgress","Match","batingTeam","setBatingTeam","bowlingTeam","setBowlingTeam","bowlResult","setBowlResult","wicketsDown","setWicketDown","setOver","bowlCounter","setBowlCounter","isMatchCompleted","setmatchCompleted","Object","keys","compare","a","b","lengthA","lengthB","comparison","getOverNumber","selectBatsMan","players","JSON","parse","stringify","find","isBatsManRun","rotateStrike","onStrickPlayer","onNonStrickPlayer","assign","startOver","_batingTeam","_bowlingTeam","counter","_wicketDown","bowler","filter","player","sort","bowlerOver","overNumber","currentBowler","_over","timer","setInterval","findIndex","aggangeBowlerOver","console","log","nextOrder","arrangeBatingTeam","isSaveRecord","stopOver","calculateResult","undefined","clearInterval","nextOver","nextInningStart","runA","runB","declareResult","onClick","matchOvers","avgRR","isNaN","isFinite","avgRunRate","card","split","zIndex","top","paddingTop","left","right","BatingScoreCard","setTeamA","setTeamB","setResult","setStrikeRate","forEach","bowl","str","teamA","teamB","BowlingDetails","o","Divider","AppRoute","path","render","exact","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","url","getTeamDetails","getItem","fetch","then","res","json","catch","ex","setTeamDetails","method","body","saveTeamDetails","getTeamData","getTeams","saveTeamsData","saveTeams","updateTeamsData","updateTeams","rootSaga","call","put","takeLatest","setItem","all","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.0091710a.chunk.js","sourcesContent":["import { createStyles, withStyles, Theme } from '@material-ui/core/styles';\nimport { InputBase } from '@material-ui/core';\n\nexport const Input = withStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      'label + &': {\n        marginTop: theme.spacing(3)\n      }\n    },\n    input: {\n      borderRadius: 4,\n      position: 'relative',\n      marginRight: 1,\n      width: '200px',\n      backgroundColor: theme.palette.background.paper,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      padding: '10px 26px 10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n      '&:valid':{\n        '&:focus': {\n          borderColor: 'green',\n          boxShadow: '0 0 0 0.1rem rgba(200, 243, 164, 0.25)'\n        }\n      },\n      '&:invalid': {\n        '&:focus': {\n          borderColor: 'red',\n          boxShadow: '0 0 0 0.1rem rgba(255, 26, 68, 0.25)'\n        }\n      }\n    },\n  }),\n)(InputBase);\n","import * as React from \"react\";\nimport { Input } from './Input'\nimport { FormControl, InputLabel, createStyles, makeStyles, Theme,InputBaseProps } from \"@material-ui/core\";\n\n\nexport interface ITextBoxProps extends InputBaseProps {\n  id?: string;\n  name?: string;\n  value?: string;\n  placeholder?: string;\n  required?: boolean;\n  error?: boolean;\n}\n\nexport const useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing(1),\n    }\n  }),\n);\n\nexport const Textbox: React.FC<ITextBoxProps> = (\n  { id, name, onChange,onBlur,onFocus, value, placeholder, required = false, error = false }\n  ) => {\n  const classes = useStyles();\n\n  return (\n    <FormControl className={classes.margin}>\n      <InputLabel required={required}\n        variant=\"filled\" style={{ backgroundColor: '#FFF' }}\n        error={error} htmlFor={'customized-textbox' + id}>{placeholder}</InputLabel>\n      <Input\n        name={name}\n        onChange={onChange}\n        onFocus={onFocus}\n        onBlur={onBlur}\n        value={value}\n        placeholder={placeholder}\n        id={id}\n        required={required}\n        error={error}\n      />\n    </FormControl>\n  )\n}\n","import * as React from 'react';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport { FormControl, createStyles, makeStyles, Theme } from '@material-ui/core';\nimport { Input } from \"./Input\";\nimport { useStyles } from './Textbox'\n\ninterface IDropdown {\n  onChange?: ((event: React.ChangeEvent<{ value: unknown }>) => void) | undefined;\n  value?: string | number;\n  id?: string;\n  labelId?: string;\n  options?: Array<string | number>\n  required?: boolean;\n  error?: boolean;\n}\n\nexport const Dropdwon = ({ onChange, value, id, labelId, options = [], required = false, error = false }: IDropdown) => {\n  const classes = useStyles();\n  return (\n    <FormControl className={classes.margin}>\n      <InputLabel required={required}\n        error={error} htmlFor={'select' + id}>Type</InputLabel>\n      <Select\n        labelId={labelId}\n        id={id}\n        value={value}\n        onChange={onChange}\n        input={<Input />}\n        required={required}\n        error={error}\n      >\n        {options.map((item: string | number, idx: number) => <MenuItem key={idx} value={item}>{item}</MenuItem>)}\n\n      </Select>\n    </FormControl>\n  )\n}\n\n","import * as React from 'react';\nimport { Dropdwon } from './Dropdown';\nimport { Textbox } from './Textbox';\n\ninterface IPlayerProps {\n    onNameChange?: ((event: React.ChangeEvent<HTMLInputElement>) => void) | undefined;\n    onPlayerTypeChange?: ((event?: React.ChangeEvent<{ value: unknown }>) => void) | undefined;\n    onNameFocus?: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined;\n    onNameBlur?: ((event: React.FocusEvent<HTMLInputElement>) => void) | undefined;\n    name?: string;\n    isNameReqired?: boolean;\n    isNameError?: boolean;\n    type?: string | number;\n    options?: Array<string | number>;\n    placeholder?: string;\n}\n\nexport const Player: React.FC<IPlayerProps> = React.memo<IPlayerProps>((\n    { onNameChange, onPlayerTypeChange, onNameFocus, onNameBlur, name, isNameReqired = false, isNameError = false, type, options, placeholder = 'Name' }) => {\n    return (\n        <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Textbox value={name}\n                onChange={onNameChange}\n                placeholder={placeholder}\n                required={isNameReqired}\n                error={isNameError}\n                onBlur={onNameBlur}\n                onFocus={onNameFocus}\n            />\n            <Dropdwon onChange={onPlayerTypeChange}\n                value={type}\n                options={options} />\n        </div>\n    )\n});","import * as React from 'react';\nimport { Textbox } from './Textbox';\nimport { Player } from './Player';\nimport { ITeam, IPlayer } from '../interfaces';\n\ninterface ITeamProps {\n    onTeamNameChangeHandler: (e: React.ChangeEvent<HTMLInputElement>, team: ITeam) => void;\n    onNameChangeHandler: (e: React.ChangeEvent<HTMLInputElement>, idx: number, team: ITeam) => void;\n    onPlayerTypeChangeHandler: (e: React.ChangeEvent<{ value: unknown }>, idx: number, team: ITeam) => void;\n    onNameFocus?: (event: React.FocusEvent<HTMLInputElement>,idx: number, team: ITeam) => void;\n    onNameBlur?: (event: React.FocusEvent<HTMLInputElement>,idx: number, team: ITeam) => void;\n    team: ITeam;\n    playerTypes: Array<string | number>;\n}\n\nexport const Team:React.FC<ITeamProps> = (\n    { onTeamNameChangeHandler, onNameChangeHandler, onPlayerTypeChangeHandler,onNameBlur,onNameFocus, team, playerTypes }) => {\n    \n    return (\n        <div>\n            <Textbox onChange={(e:React.ChangeEvent<HTMLInputElement>) => onTeamNameChangeHandler(e, team)} \n            value={team.name} \n            placeholder=\"Team Name\" required={true} error={!(team.name.length > 0)}/>\n            {team.playres.map((p: IPlayer, idx: number) => {\n                return (<div key={idx} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                    {idx + 1} <Player options={playerTypes}\n                        onNameChange={(e: React.ChangeEvent<HTMLInputElement>) => { onNameChangeHandler(e, idx, team) }}\n                        name={p.name}\n                        onPlayerTypeChange={(e?:React.ChangeEvent<{value: unknown;}>) => { onPlayerTypeChangeHandler(e!, idx, team) }}\n                        type={p.type}\n                        isNameError={p.isError}\n                        isNameReqired={p.isRequired}\n                        onNameBlur={(e:React.FocusEvent<HTMLInputElement>)=>{if(onNameBlur) onNameBlur(e,idx,team)}} \n                        onNameFocus={(e:React.FocusEvent<HTMLInputElement>)=>{if(onNameFocus )onNameFocus(e,idx,team)}}\n                        />\n                </div>)\n            })}\n        </div>\n    )\n}\n","import * as React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport { BowlResultType } from '../constants';\nimport Chip from '@material-ui/core/Chip';\nimport { IPlayer } from '../interfaces';\nimport SportsHandballSharpIcon from '@material-ui/icons/SportsHandballSharp';\nimport SportsCricketSharpIcon from '@material-ui/icons/SportsCricketSharp';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n    },\n    bullet: {\n        display: 'inline-block',\n        margin: '0 2px',\n        transform: 'scale(0.8)',\n    },\n    title: {\n        fontSize: 14,\n    },\n    pos: {\n        marginBottom: 12,\n    },\n    vl: {\n        borderLeft: '3px solid #c1c1c1',\n        padding: 2\n    }\n});\n\ninterface IScoreCardProps {\n    teamName: string;\n    run?: number;\n    wicket?: number;\n    over?: number | string;\n    bowlerName?: IPlayer;\n    overBowlResults?: Array<BowlResultType>;\n    netRunRate?: number | string;\n    isAvgRunRateDisplay: boolean;\n    strikeBatman?: IPlayer;\n    nonStrikeBatman?: IPlayer;\n    extraRun?: number;\n    totalOver: number;\n    remaningBowl?: number;\n}\n\nexport const ScoreCard: React.FC<IScoreCardProps> = React.memo<IScoreCardProps>((\n    { strikeBatman, nonStrikeBatman, extraRun = 0, remaningBowl = 0, totalOver, teamName, run = 0, over = 0, wicket = 0, bowlerName, overBowlResults = [], netRunRate = 0, isAvgRunRateDisplay }) => {\n    const classes = useStyles();\n    return (\n        <Card className={classes.root}>\n            <CardContent>\n                <Typography variant=\"h2\" color=\"textSecondary\" component=\"h2\">\n                    {teamName} <SportsCricketSharpIcon />\n                </Typography>\n\n                <Typography variant=\"h4\" component=\"h2\">\n                    Score : {`${run}/${wicket}`}\n                </Typography>\n                <Typography className={classes.pos} color=\"textSecondary\">\n                    Over: {over}/{totalOver} <span className={classes.vl}></span> Remaining Balls: {remaningBowl}\n                </Typography>\n                {strikeBatman ? <Typography variant=\"body2\" component=\"p\">\n                    <SportsCricketSharpIcon /> {strikeBatman.name}* : {strikeBatman.totalRun || 0}\n                </Typography> : ''}\n                {nonStrikeBatman ? <Typography variant=\"body2\" component=\"p\">\n                    <SportsCricketSharpIcon />{nonStrikeBatman.name} : {nonStrikeBatman.totalRun || 0}\n                </Typography> : ''}\n                {isAvgRunRateDisplay ? <Typography variant=\"body2\" component=\"p\">\n                    Net RR: {netRunRate}\n                </Typography> : ''}\n\n                <Typography variant=\"body2\" component=\"p\">\n                    <SportsHandballSharpIcon />: {bowlerName?.name}\n                    <br />\n                    {overBowlResults.map((item: BowlResultType, idx: number) => <Chip key={idx} label={item} variant=\"outlined\" />)}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n})","import React from 'react';\nimport { makeStyles, createStyles, Theme, useTheme, styled } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\n\ninterface IResultProps {\n    result?: number | string;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            display: 'inline-flex',\n            '& > *': {\n                margin: theme.spacing(1)\n            },\n        },\n        large: {\n            width: theme.spacing(40),\n            height: theme.spacing(40),\n            fontSize: '125px'\n        },\n    }),\n);\n\nexport const Cricle: React.FC<IResultProps> = React.memo<IResultProps>(({ result = 0}) => {\n    const classes = useStyles(result);\n\n    return (\n        <div className={classes.root}>\n            <Avatar className={classes.large}>{result}</Avatar>\n        </div>\n    );\n})\n\n","import * as React from 'react';\nimport { ITeam, IPlayer } from '../interfaces';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SportsCricketSharpIcon from '@material-ui/icons/SportsCricketSharp';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    header: {\n        backgroundColor: '#000'\n    },\n    headerCell: {\n        color: '#FFF',\n        fontWeight: 'bold'\n    }\n});\n\nexport const BatingDetail: React.FC<ITeam> = React.memo<ITeam>(({ playres, name, totalRun = 0, overs, noBowls = 0, wideBowls = 0, wicketFall }) => {\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <p> {name} <strong>{totalRun}/{wicketFall}  ({overs.length} ov)</strong> R/R {(totalRun / overs.length).toFixed(2)} </p>\n            <p>Extra {noBowls + wideBowls}  NB:{noBowls} WD:{wideBowls}</p>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead className={classes.header}>\n                    <TableRow>\n                        <TableCell className={classes.headerCell}>Batsman<SportsCricketSharpIcon /> </TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Status</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">R</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">4s</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">6s</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">B</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">SR</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {playres.map((p: IPlayer,idx:number) => (\n                        <TableRow key={`row-${idx}`}>\n                            <TableCell>  {p.name} </TableCell>\n                            <TableCell align=\"right\">{p.status || 'Bating not found'}</TableCell>\n                            <TableCell align=\"right\">{p.totalRun || 0}</TableCell>\n                            <TableCell align=\"right\">{p.boundryFour || 0}</TableCell>\n                            <TableCell align=\"right\">{p.boundrySix || 0}</TableCell>\n                            <TableCell align=\"right\">{p.bowlPlayed || 0}</TableCell>\n                            <TableCell align=\"right\">{p.strikeRate}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer >\n    );\n})","import * as React from 'react';\nimport { ITeam, IPlayer } from '../interfaces';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport SportsHandballIcon from '@material-ui/icons/SportsHandball';\n\nconst useStyles = makeStyles({\n    table: {\n        minWidth: 650,\n    },\n    header: {\n        backgroundColor: '#000'\n    },\n    headerCell: {\n        color: '#FFF',\n        fontWeight: 'bold'\n    }\n});\n\nexport const BowlingDetail: React.FC<ITeam> = React.memo<ITeam>(({ playres, name, totalRun = 0, overs, noBowls = 0, wideBowls = 0, wicketFall }) => {\n    const classes = useStyles();\n    return (\n        <TableContainer component={Paper}>\n            <h3> {name} </h3>\n            <p>Extra {noBowls + wideBowls}  NB:{noBowls} WD:{wideBowls}</p>\n            <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\n                <TableHead className={classes.header}>\n                    <TableRow>\n                        <TableCell className={classes.headerCell}>Bowling<SportsHandballIcon /> </TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">O</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">R</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Wt</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">NB</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">WB</TableCell>\n                        <TableCell className={classes.headerCell} align=\"right\">Economy</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {playres.map((p: IPlayer, idx: number) => (\n                        <TableRow key={`row-${idx}`}>\n                            <TableCell>  {p.name} </TableCell>\n                            <TableCell align=\"right\">{p.overs.length}.0</TableCell>\n                            <TableCell align=\"right\">{p.totalRun}</TableCell>\n                            <TableCell align=\"right\">{p.wickets}</TableCell>\n                            <TableCell align=\"right\">{p.noBowls || 0}</TableCell>\n                            <TableCell align=\"right\">{p.wideBowls || 0}</TableCell>\n                            <TableCell align=\"right\">{p.economy}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n        </TableContainer >\n    );\n})\n","export const PlayerTypes: string[] = ['batsman', 'bowler']\n","export type BowlResultType = 0|1|2|4|5|6|'NB'|'Wt'|'WB';\n\nexport const BowlResults = [0,1,2,4,5,6,'NB','Wt','WB'];\n","import { ITeams } from \"../interfaces\";\n\nexport const initialState: ITeams  = {\n    team_a: {\n        name: 'India',\n        playres: [],\n        id: Math.floor(Math.random() * 100),\n        totalRun: 0,\n        overs: [],\n        isInningCompleted: false\n    },\n    team_b: {\n        name: 'England',\n        playres: [],\n        id: Math.floor(Math.random() * 100),\n        totalRun: 0,\n        overs: [],\n        isInningCompleted: false\n    } \n}\n","import { ITeams } from \"../interfaces\"\n\nexport function GetTeams(){\n    return {\n        type: \"GET_TEAMS\"\n    }\n}\n\nexport function SaveTeams(payload: ITeams): { type: string, payload: ITeams } {\n    return {\n        type: \"SAVE_TEAMS_INIT\",\n        payload\n    }\n}\n\nexport function UpdateTeams(payload: ITeams): { type: string, payload: ITeams } {\n    return {\n        type: \"UPDATE_TEAMS_INIT\",\n        payload\n    }\n}\n\n\nexport const SucessResponse = (payload: any): { type: string, payload: any } => {\n    return {\n        type: \"SAVE_TEAM_SUCCESS\",\n        payload\n    }\n}\n\n\n","import React, { useState, FunctionComponent as FC, useEffect } from 'react';\nimport { Team } from '../components';\nimport { PlayerTypes } from '../constants'\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport { ITeam, ITeams, IPlayer, playerType } from '../interfaces';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { SaveTeams } from '../actions';\nimport { useHistory } from \"react-router-dom\";\nimport { RootState } from '../reducers';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            '& > *': {\n                margin: theme.spacing(1)\n            },\n        },\n    }),\n);\n\nexport const TeamCreater: FC = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const [teams, setTeams] = useState<ITeams>()\n\n    const {teams: teamDetails} = useSelector((state: RootState) =>state);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        localStorage.clear();\n        const { team_a, team_b } = { ...teamDetails } as ITeams;\n        for (let i = 0; i < 11; i++) {\n            let _type: playerType = 'batsman';\n            if (i > 5) {\n                _type = 'bowler'\n            }\n            const playersDefaultProps = {\n                type: _type,\n                batingOrder: i,\n                overs: [],\n                hasStrike: false,\n                isError: false,\n                isRequired: true\n            }\n            const team_a_player: IPlayer = { name: '', teamId: 'TeamA', ...playersDefaultProps }\n            const team_b_player: IPlayer = { name: '', teamId: 'TeamB', ...playersDefaultProps }\n            team_a.playres.push({ ...team_a_player })\n            team_b.playres.push({ ...team_b_player });\n        }\n        setTeams({ team_a, team_b })\n    }, [teamDetails])\n\n    const onTeamNameChangeHandler = (e: React.ChangeEvent<HTMLInputElement>, _team: ITeam) => {\n        const { team_a, team_b } = { ...teams };\n        if (team_a!.id === _team.id) {\n            team_a!.name = e.target.value;\n        } else {\n            team_b!.name = e.target.value;\n        }\n        setTeams({ team_a: team_a!, team_b: team_b! })\n    }\n\n    const onNameChangeHandler = (e: React.ChangeEvent<HTMLInputElement>, idx: number, _team: ITeam) => {\n        let { team_a, team_b } = { ...teams };\n        _team.playres[idx] = { ..._team.playres[idx], name: e.target.value, isError: !(e.target.value.length > 0) };\n        if (_team.id == team_a!.id) {\n            team_a = _team;\n        }\n        else {\n            team_b = _team;\n        }\n        setTeams({ team_a: team_a!, team_b: team_b! })\n    }\n\n    const onPlayerTypeChangeHandler = (e: React.ChangeEvent<{ value: unknown }>, idx: number, _team: ITeam) => {\n        let { team_a, team_b } = { ...teams };\n        _team.playres[idx] = { ..._team.playres[idx], type: e.target.value as playerType };\n        if (_team.id == team_a!.id) {\n            team_a = _team;\n        }\n        else {\n            team_b = _team;\n        }\n        setTeams({ team_a: team_a!, team_b: team_b! })\n    }\n\n    const onBlur = (e: React.FocusEvent<HTMLInputElement>, idx: number, _team: ITeam) => {\n        let { team_a, team_b } = { ...teams };\n        _team.playres[idx] = { ..._team.playres[idx], isError: !(e.target.value.length > 0) };\n        if (_team.id == team_a!.id) {\n            team_a = _team;\n        }\n        else {\n            team_b = _team;\n        }\n        setTeams({ team_a: team_a!, team_b: team_b! })\n    }\n\n    const validate = (team: ITeam): boolean => {\n        let isValid = true;\n        debugger;\n        for (let i = 0; i < team.playres.length; i++) {\n            if (team.playres[i].name.length === 0) {\n                team.playres[i].isError = true;\n                isValid = false;\n                let { team_a, team_b } = { ...teams };\n                if (team.id == team_a!.id) {\n                    team_a = team;\n                }\n                else {\n                    team_b = team;\n                }\n                setTeams({ team_a: team_a!, team_b: team_b! })\n                break;\n            }\n        }\n        if (isValid)\n            isValid = (team.name.length > 0)\n\n        return isValid;\n    }\n\n    const onSubmit = (e: any) => {\n        e?.preventDefault();\n        if (validate(teams!.team_a) && validate(teams!.team_b)) {\n            dispatch(SaveTeams(teams!));\n            history.push('/matchstart')\n        }\n    }\n\n    if (!teams) {\n        return (<CircularProgress />)\n    }\n\n    return (\n        <form onSubmit={onSubmit} className={classes.root} noValidate autoComplete=\"off\">\n            <h1>Create Team</h1>\n            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n                <div>\n                    <Team onTeamNameChangeHandler={onTeamNameChangeHandler}\n                        onNameChangeHandler={onNameChangeHandler}\n                        onPlayerTypeChangeHandler={onPlayerTypeChangeHandler}\n                        onNameBlur={onBlur}\n                        team={teams!.team_a}\n                        playerTypes={PlayerTypes} />\n                </div>\n                <span style={{ borderRight: '1px solid #eee' }}></span>\n                <div style={{ marginLeft: '50px' }}>\n                    <Team onTeamNameChangeHandler={onTeamNameChangeHandler}\n                        onNameChangeHandler={onNameChangeHandler}\n                        onPlayerTypeChangeHandler={onPlayerTypeChangeHandler}\n                        team={teams!.team_b}\n                        onNameBlur={onBlur}\n                        playerTypes={PlayerTypes} />\n                </div>\n            </div>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" id=\"submit\">\n                Start Match\n            </Button>\n        </form>)\n}","import React, { useState, FunctionComponent as FC, useEffect } from 'react';\nimport { BowlResults, BowlResultType } from '../constants';\nimport { Button, Card, CardContent, Typography, CircularProgress } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ITeam, ITeams, IPlayer, IOver, IBowlerOver } from '../interfaces';\nimport { ScoreCard, Cricle } from '../components';\nimport { UpdateTeams, GetTeams } from '../actions';\nimport { useHistory, Link } from \"react-router-dom\";\nimport classes from '*.module.css';\n\nexport const Match: FC = () => {\n    const teamDetails = useSelector((state: any) => state.teams);\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const matchOvers: number = 1;\n\n    const [batingTeam, setBatingTeam] = useState<ITeam>();\n    const [bowlingTeam, setBowlingTeam] = useState<ITeam>();\n    const [bowlResult, setBowlResult] = useState<BowlResultType | ''>('');\n    const [wicketsDown, setWicketDown] = useState<number>(0);\n    const [over, setOver] = useState<BowlResultType[]>([]);\n    const [bowlCounter, setBowlCounter] = useState<number>(0);\n    const [isMatchCompleted, setmatchCompleted] = useState<boolean>(false)\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            if (teamDetails.team_a.isInningCompleted) {\n                setBatingTeam(teamDetails.team_b)\n                setBowlingTeam(teamDetails.team_a)\n            } else {\n                setBatingTeam(teamDetails.team_a)\n                setBowlingTeam(teamDetails.team_b)\n            }\n            if (teamDetails.team_a.isInningCompleted && teamDetails.team_b.isInningCompleted) {\n                setmatchCompleted(true);\n            }\n        }\n    }, [teamDetails]);\n\n\n    const hitBowl = (): BowlResultType => {\n        return BowlResults[Math.floor(Math.random() * BowlResults.length)] as BowlResultType;\n    }\n\n    const compare = (a: IPlayer, b: IPlayer) => {\n        const lengthA = a.overs?.length || 0;\n        const lengthB = b.overs?.length || 0;\n        let comparison = 0;\n        if (lengthA > lengthB) {\n            comparison = 1;\n        } else if (lengthA < lengthB) {\n            comparison = -1;\n        }\n        return comparison;\n    }\n\n    const getBowler = (players: IPlayer[]): IPlayer => {\n        return players.filter((player: IPlayer) => player.type === 'bowler').sort(compare).find((player: IPlayer) => player.type === 'bowler') as IPlayer\n    }\n\n    const getOverNumber = (): number => (!batingTeam?.overs?.length ? 1 : (batingTeam?.overs?.length + 1));\n\n    const aggangeBowlerOver = (bowlerOver: IBowlerOver, result: BowlResultType, _over: BowlResultType[]): IBowlerOver => {\n        const run = (result === 'WB' || result === 'NB') ? 1 : result as number;\n        return Object.assign(bowlerOver, {\n            totalRun: result !== 'Wt' ? (bowlerOver.totalRun || 0) + run : (bowlerOver.totalRun || 0),\n            wicketFall: result === 'Wt' ? (bowlerOver.wicketFall || 0) + 1 : (bowlerOver.wicketFall || 0),\n            bowlResult: [..._over],\n            boundryFour: result === 4 ? (bowlerOver.boundryFour || 0) + 1 : (bowlerOver.boundryFour || 0),\n            boundrySix: result === 6 ? (bowlerOver.boundrySix || 0) + 1 : (bowlerOver.boundrySix || 0),\n            noBowls: result === 'NB' ? (bowlerOver.noBowls || 0) + 1 : (bowlerOver.noBowls || 0),\n            wideBowls: result === 'WB' ? (bowlerOver.wideBowls || 0) + 1 : (bowlerOver.wideBowls || 0)\n        })\n    }\n\n    const selectBatsMan = (players: IPlayer[], batingOrder: number): IPlayer => {\n        return JSON.parse(JSON.stringify(players.find((p: IPlayer) => p.batingOrder === batingOrder))) as IPlayer\n    }\n\n    const isBatsManRun = (result: BowlResultType): boolean => {\n        return (result === 'WB' || result === 'Wt' || result === 'NB') ? false : true\n    }\n\n\n    const arrangeBatingTeam = (_batingTeam: ITeam, result: BowlResultType): ITeam => {\n        const run = (result === 'WB' || result === 'NB') ? 1 : result as number;\n        const { playres } = JSON.parse(JSON.stringify(_batingTeam));\n        if (!_batingTeam.onStrickPlayer) {\n            _batingTeam.onStrickPlayer = selectBatsMan([...playres], 0);\n            _batingTeam.onNonStrickPlayer = selectBatsMan([...playres], 1);\n        }\n        const { onStrickPlayer, onNonStrickPlayer } = _batingTeam;\n        Object.assign(onStrickPlayer, {\n            bowlPlayed: result !== 'WB' ? (onStrickPlayer?.bowlPlayed || 0) + 1 : (onStrickPlayer?.bowlPlayed || 0),\n            totalRun: isBatsManRun(result) ? (onStrickPlayer?.totalRun || 0) + (result as number) : (onStrickPlayer?.totalRun || 0),\n            boundryFour: result === 4 ? (onStrickPlayer?.boundryFour || 0) + 1 : (onStrickPlayer?.boundryFour || 0),\n            boundrySix: result === 6 ? (onStrickPlayer?.boundrySix || 0) + 1 : (onStrickPlayer?.boundrySix || 0),\n            status: result === 'Wt' ? 'Out' : 'Not Out',\n            hasStrike: result === 'Wt' ? false : true\n        })\n        const idx = playres.findIndex((p: IPlayer) => p.batingOrder === onStrickPlayer.batingOrder)\n        if (idx > -1) {\n            playres[idx] = JSON.parse(JSON.stringify(onStrickPlayer));\n        }\n        if (isBatsManRun(result) && (result as number) / 2 !== 0) {\n            rotateStrike(_batingTeam);\n            console.log(_batingTeam);\n        }\n        if (result === 'Wt') {\n            const nextOrder = (onStrickPlayer?.batingOrder || 0) > (onNonStrickPlayer?.batingOrder || 0) ? (onStrickPlayer?.batingOrder || 0) : (onNonStrickPlayer?.batingOrder || 0);\n            _batingTeam.onStrickPlayer = selectBatsMan([...playres], nextOrder + 1);\n        }\n        Object.assign(_batingTeam, {\n            totalRun: result !== 'Wt' ? (_batingTeam.totalRun || 0) + run : (_batingTeam.totalRun || 0),\n            wicketFall: result === 'Wt' ? (_batingTeam.wicketFall || 0) + 1 : (_batingTeam.wicketFall || 0),\n            boundryFour: result === 4 ? (_batingTeam.boundryFour || 0) + 1 : (_batingTeam.boundryFour || 0),\n            boundrySix: result === 6 ? (_batingTeam.boundrySix || 0) + 1 : (_batingTeam.boundrySix || 0),\n            noBowls: result === 'NB' ? (_batingTeam.noBowls || 0) + 1 : (_batingTeam.noBowls || 0),\n            wideBowls: result === 'WB' ? (_batingTeam.wideBowls || 0) + 1 : (_batingTeam.wideBowls || 0),\n            extraRun: (result === 'NB' || result === 'WB') ? (_batingTeam.extraRun || 0) + 1 : (_batingTeam.extraRun || 0),\n            playres: JSON.parse(JSON.stringify(playres)),\n            onStrickPlayer: { ..._batingTeam.onStrickPlayer },\n            onNonStrickPlayer: { ..._batingTeam.onNonStrickPlayer }\n        });\n        return _batingTeam\n    }\n\n    const rotateStrike = (team: ITeam): ITeam => {\n        const onStrickPlayer = JSON.parse(JSON.stringify(team.onStrickPlayer));\n        const onNonStrickPlayer = JSON.parse(JSON.stringify(team.onNonStrickPlayer));\n        return Object.assign(team, { onNonStrickPlayer: onStrickPlayer, onStrickPlayer: onNonStrickPlayer });\n    }\n\n    const startOver = (_batingTeam: ITeam, _bowlingTeam: ITeam): void => {\n        let counter: number = 0;\n        let _wicketDown: number = wicketsDown;\n        const bowler = getBowler(_bowlingTeam.playres);\n        let bowlerOver: IBowlerOver = {\n            overNumber: getOverNumber(), totalRun: 0,\n            boundryFour: 0, boundrySix: 0, wicketFall: 0, bowlResult: [], noBowls: 0, wideBowls: 0,\n        }\n        _bowlingTeam.currentBowler = bowler;\n       \n        const _over = over;\n        const timer = setInterval(() => {\n            const result: BowlResultType = hitBowl();\n            setBowlResult(result);\n            const _bowlResults: BowlResultType[] = [0, 1, 2, 4, 5, 6, 'Wt'];\n            _over.push(result);\n            if (result === 'Wt') {\n                _wicketDown++\n                setWicketDown(_wicketDown);\n                const idx = _bowlingTeam.playres.findIndex((p: IPlayer) => p.name === bowler.name)\n                const wickets = _bowlingTeam.playres[idx].wickets || 0\n                if (wickets === 0) {\n                    _bowlingTeam.playres[idx].wickets = 0;\n                }\n                if (_bowlingTeam.playres[idx].wickets)\n                    _bowlingTeam.playres[idx] = { ..._bowlingTeam.playres[idx], wickets: (wickets + 1) }\n            }\n            bowlerOver = aggangeBowlerOver({ ...bowlerOver }, result, _over);\n            _batingTeam = arrangeBatingTeam({ ..._batingTeam }, result)\n            let isSaveRecord = false;\n            if (_bowlResults.findIndex((item: BowlResultType, idx: number) => item === result) > -1) {\n                counter++;\n                if (counter === 6) {\n                    _batingTeam = rotateStrike(_batingTeam);\n                    counter = stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n                    isSaveRecord = true;\n                }\n            }\n\n            if (_batingTeam.wicketFall === 10) {\n                counter = stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n                _batingTeam.isInningCompleted = true;\n                isSaveRecord = true;\n            }\n\n            if (_bowlingTeam.isInningCompleted && calculateResult(_batingTeam as ITeam,_bowlingTeam as ITeam).name === _batingTeam.name) {\n                _batingTeam.isInningCompleted = true;\n                _bowlingTeam.isInningCompleted=true;\n                isSaveRecord = true;\n                stopOver(_batingTeam, _bowlingTeam, bowlerOver, timer);\n            }\n            setBatingTeam({ ..._batingTeam });\n            setBowlingTeam({ ..._bowlingTeam });\n            setOver(_over);\n            setBowlCounter(counter);\n            if (isSaveRecord) {\n                if (!_bowlingTeam.isInningCompleted) {\n                    dispatch(UpdateTeams({ team_a: _batingTeam, team_b: _bowlingTeam }))\n                }\n                else {\n                    dispatch(UpdateTeams({ team_a: _bowlingTeam, team_b: _batingTeam }))\n                }\n            }\n        }, 1000);\n    }\n\n    const stopOver = (_batingTeam: ITeam, _bowlingTeam: ITeam, bowlerOver: IBowlerOver, timer: NodeJS.Timeout) => {\n        if (_batingTeam!.overs == undefined) {\n            _batingTeam!.overs = [];\n        }\n        _batingTeam!.overs.push({ bowlerName: _bowlingTeam.currentBowler?.name || '', ...bowlerOver })\n        console.log(_batingTeam!.overs)\n        _batingTeam.isInningCompleted = (_batingTeam!.overs?.length === matchOvers)\n        // _batingTeam.playres = JSON.parse(JSON.stringify([..._batingTeam.playres]));\n        const idx: number = _bowlingTeam.playres.findIndex((p: IPlayer) => p.name === _bowlingTeam.currentBowler?.name);\n        if (idx > -1 && _bowlingTeam.playres[idx].overs === undefined) {\n            _bowlingTeam.playres[idx] = { ..._bowlingTeam.playres[idx], overs: [bowlerOver] }\n        }\n        else {\n            _bowlingTeam.playres[idx]?.overs.push(bowlerOver);\n        }\n\n        clearInterval(timer);\n        return 0;\n    }\n\n    const nextOver = (): void => {\n        over.length = 0;\n        startOver({ ...batingTeam } as ITeam, { ...bowlingTeam } as ITeam);\n    }\n\n    const avgRunRate = (): number | string => {\n        const avgRR = ((batingTeam?.totalRun || 0) / (batingTeam?.overs?.length || 0))\n        return (isNaN(avgRR) && !isFinite(avgRR)) ? 0 : avgRR.toFixed(2);\n    }\n\n    const matchStart = (): void => {\n        startOver(JSON.parse(JSON.stringify(teamDetails.team_a)), JSON.parse(JSON.stringify(teamDetails.team_b)));\n    }\n\n    const nextInningStart = (): void => {\n        over.length = 0;\n        teamDetails.team_a = JSON.parse(JSON.stringify(batingTeam));\n        teamDetails.team_b = JSON.parse(JSON.stringify(bowlingTeam));\n        setBatingTeam(JSON.parse(JSON.stringify(teamDetails.team_b)));\n        setBowlingTeam(JSON.parse(JSON.stringify(teamDetails.team_a)));\n        startOver(JSON.parse(JSON.stringify(teamDetails.team_b)), JSON.parse(JSON.stringify(teamDetails.team_a)));\n    }\n\n    const nextOverButton = (): JSX.Element => (<Button variant=\"contained\" color=\"primary\" onClick={nextOver}>Start Over</Button>)\n    const nextInningButton = (): JSX.Element => (<Button variant=\"contained\" color=\"primary\" onClick={nextInningStart}>Next Inning</Button>)\n\n    const remaningBowl = (): number => {\n        return (matchOvers * 6) - (((batingTeam?.overs?.length || 0) * 6) + bowlCounter)\n    }\n\n    const calculateResult = (_batingTeam:ITeam,_bowlingTeam:ITeam): ITeam => {\n        return (_batingTeam!.totalRun || 0) > (_bowlingTeam!.totalRun || 0) ? _batingTeam! : _bowlingTeam!;\n    }\n    const declareResult = (): string => {\n        const runA = (batingTeam!.totalRun || 0);\n        const runB = (bowlingTeam!.totalRun || 0);\n        if(runA > runB){\n            return `${batingTeam!.name} beat  ${bowlingTeam!.name} by ${10 - (batingTeam!.wicketFall || 0)} wickets`; \n        }\n        if(runA < runB){\n          return  `${bowlingTeam!.name} beat ${batingTeam!.name} by ${runB - runA} runs`;\n        }\n        return  'Match tie'\n    }\n\n    if (!batingTeam) {\n        return (<CircularProgress />)\n    }\n\n    if (!isMatchCompleted) {\n        return (\n            <div>\n                <Cricle result={bowlResult} />\n                <ScoreCard teamName={batingTeam.name}\n                    run={batingTeam!.totalRun}\n                    totalOver={matchOvers}\n                    wicket={batingTeam!.wicketFall}\n                    over={(batingTeam!.overs?.length || 0) + '.' + bowlCounter}\n                    remaningBowl={remaningBowl()}\n                    bowlerName={bowlingTeam!.currentBowler}\n                    isAvgRunRateDisplay={bowlCounter === 0}\n                    netRunRate={avgRunRate()}\n                    overBowlResults={over}\n                    strikeBatman={batingTeam.onStrickPlayer}\n                    nonStrikeBatman={batingTeam.onNonStrickPlayer}\n                />\n                {(bowlCounter === 0 && !batingTeam.isInningCompleted) ? nextOverButton() : ''}\n                {batingTeam.isInningCompleted ? nextInningButton() : ''}\n\n            </div>\n\n        )\n    }\n\n    return (\n        <div>\n            <Card variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {declareResult()}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => { history.push('/scorecard') }}>\n                Batting Score Card\n            </Button>\n        </div>\n    )\n}","import * as React from 'react';\nimport { makeStyles, createStyles, Theme, Card, CardContent, Typography, CircularProgress, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IPlayer, ITeam } from '../interfaces';\nimport { GetTeams } from '../actions';\nimport { BatingDetail } from '../components';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n        card: {\n            minWidth: 275,\n        },\n        title: {\n            fontSize: 14,\n        },\n        split: {\n            height: '100%',\n            width: '50%',\n            position: 'fixed',\n            zIndex: 1,\n            top: 0,\n            paddingTop: 20,\n        },\n        left: {\n            left: 0,\n        },\n        right: {\n            right: 0,\n        }\n    }),\n);\n\n\nexport const BatingScoreCard: React.FC = () => {\n    const classes = useStyles();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const teamDetails = useSelector((state: any) => state.teams);\n\n    const [team_a, setTeamA] = React.useState<ITeam>();\n    const [team_b, setTeamB] = React.useState<ITeam>();\n    const [result, setResult] = React.useState<string>();\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    const setStrikeRate = (playres: IPlayer[]): IPlayer[] => {\n        playres = playres.filter((p: IPlayer) => p.bowlPlayed)\n        playres.forEach((p: IPlayer, idx) => {\n            playres[idx].strikeRate = strikeRate(p.totalRun, p.bowlPlayed)\n        })\n        return playres;\n    }\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            teamDetails.team_a.playres = setStrikeRate(teamDetails.team_a.playres)\n            teamDetails.team_b.playres = setStrikeRate(teamDetails.team_b.playres)\n            setResult(calculateResult(teamDetails.team_a, teamDetails.team_b));\n            setTeamA(teamDetails.team_a)\n            setTeamB(teamDetails.team_b)\n        }\n    }, [teamDetails]);\n\n\n    const strikeRate = (run: number = 0, bowl: number = 0): number | string => {\n        const str = ((run / bowl) * 100)\n        return (str > -1 ? str : 0).toFixed(2);\n    }\n\n    const calculateResult = (teamA: ITeam, teamB: ITeam): string => {\n        const runA = (teamA.totalRun || 0);\n        const runB = (teamB.totalRun || 0)\n        if (runA > runB) {\n            return `${teamA.name} beat ${teamB.name} by ${runA - runB} runs`;\n        }\n        if (runA < runB) {\n            return `${teamB.name} beat ${teamA.name} by ${10 - (teamB.wicketFall || 0)} wickets`;\n        }\n        return 'Match tie'\n    }\n    const nextScreen = () => {\n        history.push('/bowing')\n    }\n\n    if (!team_a) {\n        return <div className={classes.root}><CircularProgress /></div>\n    }\n\n    return (\n        <div>\n            <Card className={classes.card} variant=\"outlined\">\n                <CardContent>\n                    <Typography variant=\"h5\" component=\"h2\">\n                        {result}\n                    </Typography>\n                </CardContent>\n            </Card>\n            <div className={`${classes.split},${classes.left}`}>\n                <BatingDetail {...team_a!} />\n            </div>\n            <div className={`${classes.split},${classes.right}`}>\n                <BatingDetail {...team_b!} />\n            </div>\n            <Button variant=\"contained\" color=\"primary\" onClick={nextScreen}>Bowling Details</Button>\n\n        </div>\n    )\n}\n","import * as React from 'react';\nimport { makeStyles, createStyles, Theme, Divider, Card, CardContent, Typography, CircularProgress, Button } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { IPlayer, ITeam, IBowlerOver } from '../interfaces';\nimport { GetTeams } from '../actions';\nimport { BowlingDetail } from '../components';\nimport { useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            width: '100%',\n            '& > * + *': {\n                marginTop: theme.spacing(2),\n            },\n        },\n        card: {\n            minWidth: 275,\n        },\n        title: {\n\n            fontSize: 14,\n        },\n    }),\n);\n\n\nexport const BowlingDetails: React.FC = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const teamDetails = useSelector((state: any) => state.teams);\n\n    const [team_a, setTeamA] = React.useState<ITeam>();\n    const [team_b, setTeamB] = React.useState<ITeam>();\n    const [result, setResult] = React.useState<string>();\n\n    React.useEffect(() => {\n        dispatch(GetTeams());\n    }, []);\n\n    React.useEffect(() => {\n        if (Object.keys(teamDetails).length) {\n            teamDetails.team_a.playres = setStrikeRate(teamDetails.team_a.playres)\n            teamDetails.team_b.playres = setStrikeRate(teamDetails.team_b.playres)\n            let noBowls = teamDetails.team_a.noBowls, wideBowls = teamDetails.team_a.wideBowls;\n            teamDetails.team_a.noBowls = teamDetails.team_b.noBowls;\n            teamDetails.team_a.wideBowls = teamDetails.team_b.wideBowls;\n            teamDetails.team_b.noBowls = noBowls;\n            teamDetails.team_b.wideBowls=wideBowls;\n            setTeamA(teamDetails.team_a)\n            setTeamB(teamDetails.team_b)\n        }\n    }, [teamDetails]);\n\n    const setStrikeRate = (playres: IPlayer[]): IPlayer[] => {\n        playres = playres.filter((p: IPlayer) => p.overs)\n        playres.forEach((p: IPlayer, idx: number) => {\n            playres[idx].totalRun = 0;\n            let run:number=0,wicket:number=0, noBowls:number=0, wideBowls:number=0;\n            p.overs.forEach((o: IBowlerOver) => {\n                    run += (o.totalRun || 0);\n                    wicket +=(o.wicketFall||0);\n                    noBowls +=(o.noBowls||0)\n                    wideBowls +=(o.wideBowls||0)\n            });\n            playres[idx] = {...playres[idx],totalRun:run,wickets:wicket,economy:run/(p.overs.length),noBowls,wideBowls}\n        })\n        return playres;\n    }\n\n    const nextScreen = () => {\n        history.push('/')\n    }\n\n    if (!team_a) {\n        return <div className={classes.root}><CircularProgress /></div>\n    }\n\n    return (\n        <div>\n            <Button variant=\"contained\" color=\"primary\" onClick={nextScreen}>New Match</Button>\n            <BowlingDetail {...team_a!} />\n            <Divider />\n            <BowlingDetail {...team_b!} />\n        </div>\n    )\n}\n","import React from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nimport { TeamCreater, Match,BatingScoreCard, BowlingDetails } from './containers';\n\nexport const AppRoute = () => {\n    return (<Router>\n        <Switch>\n            <Route path=\"/\" render={() => <TeamCreater />} exact={true} />\n            <Route path=\"/matchstart\" render={() => <Match/>} />\n            <Route path=\"/scorecard\" render={() => <BatingScoreCard/>} />\n            <Route path='/bowing' render={()=><BowlingDetails/>}/>\n        </Switch>\n    </Router>)\n}\n","import React from 'react';\nimport './App.css';\nimport { AppRoute } from './Route';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRoute />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers } from 'redux';\nimport {TeamReducers } from './TeamReducres'\n\nexport const rootReducer =  combineReducers({\n    teams:TeamReducers,\n})\nexport type RootState = ReturnType<typeof rootReducer>;","import { ITeams } from \"../interfaces\";\nimport { initialState } from \"../constants\";\n\ninterface IinitialState {\n    teams: ITeams;\n    isLoading: boolean\n}\n\nexport const TeamReducers = (state: ITeams = initialState, action: { type: string, payload?: any }) => {\n    switch (action.type) {\n        case 'SAVE_TEAM_INIT':\n            return { ...state, ...action.payload };\n            break;\n        case 'UPDATE_TEAMS_INIT':\n            return { ...state, ...action.payload };\n            break;\n        case 'SAVE_TEAM_SUCCESS':\n            return { ...state, ...action.payload };\n            break;\n        default:\n            return state;\n            break;\n    }\n}","import { ITeams } from \"../interfaces\";\n\nconst url:string=`https://cric-score-ad64d.firebaseio.com/`;\n\nexport const getTeamDetails = () => {\n    const id = localStorage.getItem('id');\n    return fetch(`${url}teams/${id}/.json`)\n        .then(res => res.json())\n        .then((res) => {\n            console.log(res)\n            return res;\n        })\n        .catch(ex => {\n            console.log(ex)\n        })\n}\n\nexport const setTeamDetails = (payload: ITeams) => {\n    const id = localStorage.getItem('id')\n    if (id) {\n        return fetch(`${url}teams/${id}/.json`, {\n            method: 'PATCH',\n            body: JSON.stringify(payload)\n        })\n            .then(res => res.json())\n            .then((res) => {\n                console.log(res)\n                return res;\n            })\n            .catch(ex => {\n                console.log(ex)\n            })\n    }\n}\n\nexport const saveTeamDetails = (payload: ITeams): Promise<{ name: string }> => {\n    return fetch(`${url}/teams.json`, {\n        method: 'POST',\n        body: JSON.stringify(payload)\n    })\n        .then(res => res.json())\n        .catch(ex => {\n            console.log(ex)\n        })\n}\n","import { put, take, takeEvery, all, delay, call, takeLatest } from 'redux-saga/effects';\nimport { saveTeamDetails,setTeamDetails,getTeamDetails } from '../services';\nimport { SucessResponse } from '../actions';\nimport { ITeams } from '../interfaces';\n\nexport function* getTeamData() {\n  const res = yield call(getTeamDetails)\n  if (res) {\n    yield put(SucessResponse({ ...res }))\n  }\n}\n\nexport function* getTeams(){\n  yield takeLatest('GET_TEAMS',getTeamData)\n} \n\n\nexport function* saveTeamsData(action: {type:string,payload:ITeams}) {\n  const { payload } = action;\n  const res = yield call(saveTeamDetails, payload)\n  if (res) {\n    localStorage.setItem('id',res.name);\n    yield put(SucessResponse({ ...action.payload, ...res }))\n  }\n}\n\n\nexport function* saveTeams() {\n  yield takeLatest(\"SAVE_TEAMS_INIT\", saveTeamsData)\n}\n\n\nexport function* updateTeamsData(action: {type:string,payload:ITeams}) {\n  const { payload } = action;\n  const res = yield call(setTeamDetails, payload)\n  if (res) {\n    yield put(SucessResponse({ ...action.payload }))\n  }\n}\n\nexport function* updateTeams(){\n  yield takeLatest('UPDATE_TEAMS_INIT',updateTeamsData)\n} \n\n// notice how we now only export the rootSaga\n// single entry point to start all Sagas at once\nexport function* rootSaga() {\n  yield all([\n    getTeams(),\n    saveTeams(),\n    updateTeams()\n  ])\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { createStore ,applyMiddleware} from 'redux';\nimport { rootReducer } from './reducers';\nimport createSagaMiddleware from 'redux-saga';\n\nimport {rootSaga} from './sagas'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(...[sagaMiddleware])\n)\nsagaMiddleware.run(rootSaga)\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}